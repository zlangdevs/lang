fun main() >> i32 {
    u8 inp;
    arr<u8, 300> mem;
    arr<u8, 300> code;
    u8 mem_ptr = 0;
    u16 code_ptr = 0;
    for i32 inc = 0; inc < 300; inc++ {
        code[inc] = 0;
        mem[inc] = 0;
    }
    
    @printf("Paste Brainfuck code and press enter:\n");
    for {
        @scanf("%c", &inp);
        if inp == 10 {break;}
        code[code_ptr] = inp;
        code_ptr++;
    }
    
    @printf("\nInput code:\n");
    code_ptr = 0;
    for {
        if code[code_ptr] == 0 {break;}
        @printf("%c", code[code_ptr]);
        code_ptr++;
    }
    @printf("\n\nProcessing\n\n");
    code_ptr = 0;
    u8 loop_stack = 0;
    
    for {
        u8 c = code[code_ptr];
        if c == 0 {break;}
        else if c == '+' {mem[mem_ptr]++;} ?? +
        else if c == '-' {mem[mem_ptr]--;} ?? -
        else if c == '<' {mem_ptr--;} ?? <
        else if c == '>' {mem_ptr++;} ?? >
        else if c == ',' {@scanf("%c", mem[mem_ptr]);} ?? ,
        else if c == '.' {@printf("%c", mem[mem_ptr]);} ?? .
        else if c == '[' {
            if mem[mem_ptr] == 0 {
                loop_stack = 1;
                code_ptr++;
                for {
                    if code[code_ptr] == 0 {@printf("Error: Unmatched 91. Exiting...\n");return 1;}
                    if code[code_ptr] == 91 {loop_stack++;}
                    else if code[code_ptr] == 93 {loop_stack--;}
                    if loop_stack == 0 {break;}
                    code_ptr++;
                }
            }
        }
        else if c == ']' {
            if mem[mem_ptr] != 0 {
                loop_stack = 1;
                code_ptr--;
                for {
                    if code_ptr == 0 {@printf("Error: Unmatched 93. Exiting...\n");return 1;}
                    if code[code_ptr] == 93 {loop_stack++;}
                    else if code[code_ptr] == 91 {loop_stack--;}
                    if loop_stack == 0 {break;}
                    code_ptr--;
                }
            }
        }
        code_ptr++;
    }
    return 0;
}